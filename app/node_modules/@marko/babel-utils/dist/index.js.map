{"version":3,"sources":["../src/index.js"],"names":["defineTag","tag"],"mappings":"25BAAA,8B;;;;;;;;;;;;;;;;;;AAkBA,kC;;;;;;;;AAQA,mD;;AAEA,4B;;AAEA,gC;;AAEA,oC;;AAEA,kC;;AAEO,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AAC7B,SAAOA,GAAP;AACD,C,CAAC","sourcesContent":["export {\n  isNativeTag,\n  isMacroTag,\n  isDynamicTag,\n  isAttributeTag,\n  isTransparentTag,\n  isLoopTag,\n  getMacroIdentifier,\n  getTagDef,\n  getFullyResolvedTagName,\n  findParentTag,\n  findAttributeTags,\n  getArgOrSequence,\n  loadFileForTag,\n  loadFileForImport,\n  getTemplateId,\n  resolveTagImport\n} from \"./tags\";\nexport {\n  assertAllowedAttributes,\n  assertNoArgs,\n  assertNoAttributes,\n  assertNoParams,\n  assertNoVar,\n  assertNoAttributeTags\n} from \"./assert\";\nexport { normalizeTemplateString } from \"./template-string\";\n\nexport { getLoc, getLocRange, withLoc } from \"./loc\";\n\nexport { parseScript, parseExpression } from \"./parse\";\n\nexport { resolveRelativePath, importDefault, importNamed } from \"./imports\";\n\nexport { getTaglibLookup, getTagDefForTagName } from \"./taglib\";\n\nexport function defineTag(tag) {\n  return tag;\n} // just used for adding types for compiler plugins.\n"],"file":"index.js"}